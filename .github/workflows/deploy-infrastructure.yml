name: Deploy Infrastructure

on:
  workflow_dispatch:  # Manual trigger only for infrastructure
    inputs:
      action:
        description: 'Terraform action'
        required: true
        default: 'plan'
        type: choice
        options:
        - plan
        - apply
        - destroy

env:
  PROJECT_ID: doc-intelligence-1758210325
  REGION: asia-south1

jobs:
  terraform:
    runs-on: ubuntu-latest
    
    permissions:
      contents: read
      id-token: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.5.0

      - name: Set Terraform environment variables
        run: |
          echo "TF_VAR_gcp_project_id=${{ env.PROJECT_ID }}" >> $GITHUB_ENV
          echo "TF_VAR_gcp_region=${{ env.REGION }}" >> $GITHUB_ENV
          echo "TF_VAR_openai_api_key=${{ secrets.OPENAI_API_KEY }}" >> $GITHUB_ENV
          echo "TF_VAR_jwt_secret_key=${{ secrets.JWT_SECRET_KEY }}" >> $GITHUB_ENV
          echo "TF_VAR_mysql_password=${{ secrets.MYSQL_PASSWORD }}" >> $GITHUB_ENV

      - name: Terraform Init
        run: |
          cd terraform
          terraform init

      - name: Terraform Plan
        if: github.event.inputs.action == 'plan'
        run: |
          cd terraform
          terraform plan -out=tfplan

      - name: Terraform Apply
        if: github.event.inputs.action == 'apply'
        run: |
          cd terraform
          terraform plan -out=tfplan
          terraform apply tfplan

      - name: Terraform Destroy
        if: github.event.inputs.action == 'destroy'
        run: |
          cd terraform
          terraform destroy -auto-approve

      - name: Deploy Kubernetes manifests
        if: github.event.inputs.action == 'apply'
        run: |
          # Get cluster credentials
          gcloud container clusters get-credentials doc-intel-gke \
            --region ${{ env.REGION }} \
            --project ${{ env.PROJECT_ID }}
          
          # Apply Kubernetes manifests
          kubectl apply -f kubernetes/00-namespace.yaml
          kubectl apply -f kubernetes/01-external-secrets.yaml
          kubectl apply -f kubernetes/02-db-init-job.yaml
          kubectl apply -f kubernetes/06-loadbalancer-services.yaml
          kubectl apply -f kubernetes/05-gcp-ingress.yaml
          
          # Wait a bit for secrets to be created
          sleep 30
          
          # Apply deployments
          kubectl apply -f kubernetes/03-auth-deployment.yaml
          kubectl apply -f kubernetes/04-text-extraction-deployment.yaml
          kubectl apply -f kubernetes/08-text-summarization-deployment.yaml
          kubectl apply -f kubernetes/06-auth-hpa.yaml
          kubectl apply -f kubernetes/07-text-extraction-hpa.yaml

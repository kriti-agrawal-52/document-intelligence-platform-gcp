# /kubernetes/03-auth-deployment.yaml
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: auth-deployment
  namespace: doc-intel-app
spec:
  replicas: 1
  strategy:
    type: Recreate  # Terminate old pod before creating new one (prevents resource conflicts)
  selector:
    matchLabels:
      app: auth-service
  template:
    metadata:
      labels:
        app: auth-service
    spec:
      containers:
      - name: auth-service
        image: asia-south1-docker.pkg.dev/doc-intelligence-1758210325/document-intelligence-containers/auth-service:v1
        ports:
        - containerPort: 8000
        env:
        # --- Database Configuration ---
        - name: MYSQL_HOST
          value: "mysql-external.doc-intel-app.svc.cluster.local"
        - name: MYSQL_PORT
          valueFrom:
            secretKeyRef:
              name: db-credentials
              key: MYSQL_PORT
        - name: MYSQL_USER
          valueFrom:
            secretKeyRef:
              name: db-credentials
              key: MYSQL_USER
        - name: MYSQL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: db-credentials
              key: MYSQL_PASSWORD
        # --- Redis Configuration (for JWT blacklist) ---
        - name: REDIS_HOST
          valueFrom:
            secretKeyRef:
              name: gcp-config
              key: REDIS_HOST
        - name: REDIS_PORT
          valueFrom:
            secretKeyRef:
              name: gcp-config
              key: REDIS_PORT
        - name: REDIS_DB
          value: "0"
        # --- Secrets ---
        - name: JWT_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: api-keys
              key: JWT_SECRET_KEY
        - name: OPENAI_API_KEY
          valueFrom:
            secretKeyRef:
              name: api-keys
              key: OPENAI_API_KEY
        # Resource requests for lightweight deployment
        resources:
          requests:
            cpu: "100m"      # 0.1 CPU cores
            memory: "256Mi"  # 256 MB RAM
          limits:
            cpu: "500m"      # Max 0.5 CPU cores
            memory: "512Mi"  # Max 512 MB RAM
        readinessProbe:
          httpGet:
            path: /auth/health
            port: 8000
          initialDelaySeconds: 45  # Increased for MySQL/Redis connections
          periodSeconds: 10
          timeoutSeconds: 5
        livenessProbe:
          httpGet:
            path: /auth/health
            port: 8000
          initialDelaySeconds: 60  # Longer for database initialization
          periodSeconds: 15
          timeoutSeconds: 5

---
# NodePort Service for Auth Service (required for GCP Ingress)
apiVersion: v1
kind: Service
metadata:
  name: auth-service
  namespace: doc-intel-app
  labels:
    app: auth-service
  annotations:
    # Enable NEG for NodePort services used by ingress
    cloud.google.com/neg: '{"ingress": true}'
    # Associate with service-specific BackendConfig
    cloud.google.com/backend-config: '{"ports": {"8000": "auth-backend-config"}}'
spec:
  type: NodePort
  selector:
    app: auth-service
  ports:
  - port: 8000
    targetPort: 8000
    protocol: TCP
    name: http